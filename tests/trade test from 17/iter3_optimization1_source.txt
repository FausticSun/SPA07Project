procedure main {
    read x;             
    count = 0;          
    call miss;   
}

procedure mr{
    if ((x > 10) && (x <99)) then {  
        x = x % 10;                  
    } else {                        
        x = 5;                       
    }
    print sum;                       
}

procedure miss{
    read y;                         
    x = y;                          
    sum = sum * sum + f + x;        
    z = 1;                          
    f = 0;                          
    y = 1;                          
    count = count + 1;              
    sum = 0;                        
    call mr;                  
    while (count <= x) {            
        sum = sum + y;              
        m = y + z;                  
        y = z;                      
        z = m;                      
        if (sum > 10) then {        
            f = 1;                  
        } else {                    
            f = 0;                  
        }   
        count = count + 1;           
    }
    print sum;                      
    a = f + y + z + sum * sum / f + x;  
    print a;                            
}

procedure sir {
    read x;                 
    y = 2 *z;               
    call mr;          
    z = p - y;              
    if (q!=1) then {        
        z = x + 24;         
        call main;          
    } else {
        while (z > 0) {     
            y = x * q - 5;  
            z = z - 1;      
        }
        y = x + y * z + p*q;    
        call mr;          
    }
    i = x + j + z;              
    print z;                    
}

procedure COLOUR {
    white = a + 2310 % blue;    
    call animals;               
    pink = white + blue / 124;  
    while (a < 13) {            
        red = 4;                
        print pink;             
        read a;                 
        if ((x + pink != white) || (yellow >= 1)) then {     
            c = (1 - white) + b;                 
            if (black >= 21) then {                     
                print white;                     
                read pink;                       
                if (3 != purple) then {          
                    green = blue * c;            
                    grey = white % black;       
                    while ((c == 8) && (x < orange)) { 
                        yellow = yellow + jekki;        
                        read yellow;                    
                        print yellow;                   
                    }
                } else {
                    print blue;                 
                    pink = green + pink - 10;   
                    if (velvet == green) then { 
                        print red;              
                        purple = (pink - grey) / b + 10;    
                    } else {        
                        black = blue - 82 / 10; 
                        blue = grey;            
                    }
                }
            } else {
                read blue;              
                while (c != 25) {       
                    read red;           
                    call SPA;           
                    white = blue - a % 7; 
                }
                blue = 1 - purple / 77;  
                if ((grey < 1) || (121 < blue - 1)) then { 
                   white = red / velvet - 5;                
                   a = 0;           
                   print c;         
                } else {
                    print orange;   
                    read pink;      
                    black = blue - red + pink;  
                }
            }
        } else {
            while(c + a - 173 <= jekki) { 
               orange = red / 50;         
               red = red + 2;             
               blue = 1 + white - yellow; 
            }
            blue = 5 * yellow - c;        
            read white;                   
            if (white != 134) then {      
                orange = 2- grey;         
                read c;                   
            } else {
                print pink;               
                a = c * purple / 3;       
            }
        }
    }
}

procedure fruits {
    if (apple <= sweet) then {      
        banana = 21 + x;            
        read pear;                  
        while((x <= 0) && ((y > 67) || (z % y + 45 != banana) )) { 
            b = a;  
            c = b;  
            d = c;  
            a = d;  
        }
        pineapple = 0;  
        call food;      
        print apple;    
        apple = a - 41 * z; 
    } else {
        while (strawberry <= pear) {    
            pear = papaya - 3;          
            blueberry = 1;              
            papaya = pear - blueberry + papaya; 
        }
        read sweet;         
        grape = 10;         
        soju = pear * apple;    
        print grape;            
        while (soju != cider + 2) { 
            apple = cider * soju;   
            blueberry = apple + soju;   
            call animals;           
        }
    }
    strawberry = sweet * sweet - pineapple; 
    read sweet;         
    print strawberry;   
    strawberry = 1;     
    papaya = strawberry - blueberry * 33 / pear; 
}

procedure animals {
    while (lion == king) {  
        while(bear > bare) { 
            grizz = brown + cony;   
            read icebear;           
            cat = meow + wolf - 1900;   
            print tiger;            
        }
        panda = sichuan / fat - cat - dog;  
        while (brown <= icebear - 1) {      
            icebear = russia + love;        
            print lion;                     
            read cat;                       
            panda = panda + 1;              
        }
        animals = grizz - icebear * dog % sichuan + tiger; 
        tiger = 9;      
        while (meow < 21) { 
            print brown;    
            cony = brown + love; 
        }
    }
    if (dog + 18 > meow * meow) then {  
        read icebear;   
        russia = 1;     
        if (tiger == fierce * tiger) then { 
            love = cat + rat - meow;        
            lion = panda * dog;             
        } else {
            read meow;                  
            lion = icebear - brown;     
        }
        print cat;              
    } else {
        while (cat - (dog + 614) % 1 != animals) {  
            dog = dog + cat / 14;       
            meow = 2;                   
            rat = animals % brown;      
        }
        tiger = king - lion;            
        blue = 99;                      
        fish = animals;                 
    }
}

procedure food {
    noodles = flour * noodles;          
    print butter;                         
    if (6 > rice + 1 - 22) then {       
        while(bread != flour) {         
            bread = butter * noodles;   
            read butter;                
            print noodles;              
            noodles = 1;                
        }
        if (ramen == noodles) then {    
            chocolate = candy;          
            sugar = rice + sugar;       
            read kaya;                  
        } else {
            flour = fresh - rice * biscuit; 
            butter = 7;             
            print chocolate;        
            print candy;            
        }
    } else {
        if (flour - flour * 1 % (rice + 12) > flour) then {  
            print sugar;        
            noodles = 1;        
            read flour;         
        } else {
            rice = chocolate * 2;   
            flour = 0;              
        }
        read chocolate;             
        call animals;               
        while(tart - 6 < cake % 1) {        
            candy = candy / 2;              
            rice = candy / (candy - sugar + rice % butter); 
            butter = sugar - 5;             
        }
    }
    print bread;        
    kaya = bread + 7 - flour;   
}

procedure SPA {
    while (and == 3203) {   
        suchthat = parent + (modifies % pattern) * 11 - affects / stmt; 
        stmt = stmt - 10;   
        print pattern;      
        read affects;       
        uses = pattern + suchthat;  
        if (procedure + uses >= uses - 230) then { 
            read orange;        
            progline = print;   
            call animals;       
            assign = print * modifies;  
        } else {
            stmtLst = ast * (contains - cfg) - procedure / suchthat % 101; 
            print pattern;      
            assign = 2;         
            and = and - 7;      
            read cfg;           
        }
        while (call == procedure - suchthat) {      
            pink = pink - uses;         
            progline = 1 + procedure;   
            read suchthat;      
            parent = 33;        
        }
    }
}

procedure multipleNesting {
    read z1;    
    print b1;   
    c1 = 20 - c1;   
    while (x1 % a1 >= 3 - 9 * x1 + z1 / 2) {    
        a1 = b1 - 2;            
        d1 = c1 * c1 - 320;     
        z1 = 207;               
        while((a % 200 < 350) || (x1 + y1 == 0)) {  
            print a;            
            if (a1 + b1 - s1 * t1 != 7) then {  
                print t1;                   
                m1 = m1 - f1 + y1 * z1;     
                while(c >= 0) {             
                    read s1;                
                    a = (c1 * x1 - z1) % 1000000; 
                    if (100 <= m1 + n1) then {    
                        f1 = 0;             
                        a1 = a1 + 1;        
                        while (x == 0) {    
                            c1 = a1 + z1;   
                            n1 = f1 * s1 - 99 % c1 + x1;    
                            read t1;        
                            while ((f1 * 2 < 5) && (n1 - 1 == 7)) { 
                                b1 = c1 % a1 - 300 * z1;    
                                print b1;           
                                call miss;   
                                z1 = c1 / b1;      
                                if (y1 > 1) then {  
                                    c1 = y1 / 10;   
                                    x1 = n1 + n1 - s1;  
                                    while (t1 < t1 + 2 % 1) {   
                                        f1 = m1 - 17;   
                                        print a1;       
                                        read n1;        
                                    }
                                } else {
                                    n1 = 200;   
                                    print a;    
                                    read x;     
                                    a = a + t1 + y1 - x1 * z1 / 312;    
                                }
                            }
                        }
                    } else {
                        print f1;       
                        z1 = t1 - 4;    
                        y1 = n1 * 3;    
                        s1 = s1 - 2;    
                        while (n1 * 2 == t1 % 22) { 
                            d1 = 9;         
                            read m1;        
                            x1 = d1 - n1;   
                            s1 = 10 - y1;   
                        }
                    }
                } 
            } else {
                read x1;        
                print f1;       
                print d1;       
                g1 = 30;        
                if (g1 - x1 >= m1 % g1) then {  
                    t1 = t1 + 2;    
                    y1 = n1 - 2;    
                    while (z1 == 1) {   
                        read g1;        
                        s1 = 1;         
                        read y1;        
                        r1 = s1 - z1 * t1;  
                    }
                } else {
                    print x1;           
                    m1 = r1 * 1000;     
                    call animals;       
                    if (m1 % 4 == 11) then {    
                        read t1;        
                        read d1;        
                        z1 = m1 - 3;    
                        s1 = g1 * 2 - x1;   
                    } else {        
                        d1 = s1 - 2;        
                        while (r1 <= t1) {  
                            n1 = 30;        
                            t1 = t1 - x1 + y1 / z1; 
                        }
                    }
                }
            }
        }
    }
}

procedure proc {
  x = 2;            
  z = 3;            
  i = 5;             
  while (i!=0) {    
    x = x - 1;      
    if (x==1) then {    
      z = x + 1; }      
    else {      
      y = z + x; }      
    z = z + x + i;      
    call q;             
    i = i - 1; }        
  call p; }             

procedure p {
  if (x<0) then {       
    while (i>0) {       
      x = z * 3 + 2 * y;    
      call q;           
      i = i - 1; }      
    x = x + 1;          
    z = x + z; }        
  else {
    z = 1; }            
  z = z + x + i; }      

procedure q {
  if (x==1) then {      
    z = x + 1; }        
  else {
    x = z + x; } }      

procedure SIMPLE {
 p = 4;         
 a = p * 2;     
 if (c == k) then {     
 pattern = p * a * a + p * ifs + p * w;     
 while(w > 0) {     
 call AST;          
 w = w - 1;}        
 ifs = ifs -1;}     
else {      
 call PQL;}}        

procedure AST {
 read c;            
 print c;}          


procedure PQL {
 call AST;}         


procedure procA {
 read shine;        
 ring = shine * 2;  
 f = ring + 3;      
 read lost;         
 call procB;        
 if (lost == shine) then {  
 call procC;       
 d = (shine + 12) * (lost + 13);}       
else {
 while (f > 10) {       
 read g;                
 f = ring + 4 + g * a * 2 * 1 + shine;  
 call procB;}   
 d = 2;}        
 print d;}      

procedure procB {   
 a = f + shine;         
 if (a < 2) then {      
 call procC;}          
else{
 f = f + 19;}}          

procedure procC {
 while (shine < 3) {        
 a = 1 * 2 + lost - f;      
  while (lost == a) {       
 lost = lost - 1;           
 w = a + lost;              
 shine = 1 + ring;}         
 if (a != shine) then {     
 a = lost + 1;              
 w = shine * 2;}            
else {
 w = 1;}}}                  

 procedure please {

    a1a = 4;                                                                       

    while (a1a > 0) {                                                              

        bb2 = a1a * a1a;                                                           
        ccc = 2 + a1a * 3;                                                         

        while (bb2 < 99) {                                                         
            
            read dD4;                                                              
            if ( ((a1a > 5) && (a1a <= 10)) || ((16 > ccc) && (bb2 < 80)) ) then { 
    
                while ( !( (!(a1a < ccc)) && (50 < bb2) ) ) {                      
                
                    while ( ccc >= dD4 ) {                                         
                        e33 = ccc + dD4 * a1a;                                     
                        print e33;                                                 
                        read ccc;                                                  
                    }
                }

            } else {
                
                fff = 9827 % 3820;                                                 
                while (fff != 999 ) {                                              
                    fff = fff - 1;                                                 
                    dD4 = (7 + a1a % dD4) / ( (9 * bb2) % ccc ) - 4;               
                    print fff;                                                     
                }
            }

            dD4 = bb2 + 1920;                                                      
            read x;                                                                
            call pass;                                                           
        }
        
        if ( x != 0 ) then {                                                       
            
            y = 5;                                                                 
            while ( x < 10 ) {                                                     
                y = y * 2;                                                         
                x = (((x)) + (((1)))) * y;                                         
            }
            
            while ( !( y != 100) ) {                                               
                x = 0;                                                             
                y = ((((y / 2)))) - x;                                             
            }
            print y;                                                               
            while ( x == 0 ) {                                                     
                x = x - 1;                                                         
                print y; }                                                          
        } else { print x; }                                                        

        if (y >= 0) then {                                                         
            read z;                                                                
        } else {
            read pz;                                                               
        }
    }
}

procedure pass {

    a = x + 1;                                  

    if (a == 1) then {                          

        while ( b== (c + 2)){                   
            print b;                            
            c = (b - c) * 2;                    
            b = b + 1; }                        

        while((d % 3) != 0) {                   
                
            d = 4;                              
            print d;                            

            while(d > (b / 40)){                
                d = d + d / d + d * d; }        

            d = d * 3 / 2; }                    

        a = a + 5;                              

    } else {
    
        while ((e <= f) && (f == 9)) {          

            while (f < 20) {                    

                read f;                         

                while ( g>=4) {                 
                    read g; } } } }             

    while (!(p != p)) {                         
        read p;                                 
        q = p + 900;                            
        read q; }                               

    read y;                                     
    print z;                                    
}