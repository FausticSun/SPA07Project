procedure SpecificationTest {
	read ABC; 									\\ read
	print abc;									\\ print
	read AbC;
	read A0;
	print Z9;
	while (x == 0) {							\\ while
		read y;
	}
	if (x != 0) then {							\\ if-else
		read y;
	} else {
		read z;
	}

	\\ factor
	x = 0; 										\\ const_value
	x = a; 										\\ var_name
	x = (x + 1); 								\\ (expr)

	\\ term = factor
	x = a * b;									\\ term * var_name
	x = a / b;									\\ term / var_name
	x = a % b;									\\ term % var_name
	x = a * 2;									\\ term * const_value
	x = a / 2;									\\ term / const_value
	x = a % 2;									\\ term % const_value
	x = a * (b + c);							\\ term * (expr)
	x = a / (b + c);							\\ term / (expr)
	x = a % (b + c);							\\ term % (expr)

	\\ term = term * factor, where term is (a * b)
	x = (a * b) * c;							\\ term * var_name
	x = (a * b) / c;							\\ term / var_name
	x = (a * b) % c;							\\ term % var_name
	x = (a * b) * 10;							\\ term * const_value
	x = (a * b) / 10;							\\ term / const_value
	x = (a * b) % 10;							\\ term % const_value
	x = (a * b) * (c + d);						\\ term * (expr)
	x = (a * b) / (c + d);						\\ term / (expr)
	x = (a * b) % (c + d);						\\ term % (expr)

	\\ expr = expr + term, where expr is (a / b)
	x = (a / b) + (a % b);						\\ expr + term
	x = (a / b) - (a % b);						\\ expr - term

	\\ expr = expr + term, where expr is (a / b) + (a % b)
	x = (a / b) + (a % b) + (a * b);			\\ expr + term
	x = (a / b) + (a % b) - (a * b);			\\ expr - term

	\\ rel_factor
	while (x == 0) {							\\ var_name
		read y;
	}
	while (0 == 0) {							\\ const_value
		read y;
	}
	while ((a / b) == 0) {						\\ (expr)
		read y;
	}
	while (a / b == 0) {						\\ expr
		read y;
	}

	\\ rel_expr
	while (x == 0) {							\\ var_name == const_value
		read a;
		print b;
		c = d + e;
		f = (g + h) - i;
		j = k + (l - m);
		n = (o + p - (q + r)) / s - t % (u * v - w) % (x * y / z);
	}
	while (x != y) {							\\ var_name != var_name
		if (y == 0) then {	
			read x;
			print y;
			z = a + b;
		} else {
			read p;
			print q;
			r = a + b;
		}
	}
	while (x > a / b) {								\\ var_name > expr
		read y;
	}
	while (x >= (a / b)) {							\\ var_name > (expr)
		read y;
	}
	while (0 < x) {									\\ const_value < var_name
		read y;
	}
	while (a / b <= a % b) {						\\ expr <= expr
		read y;
	}
	while ((a / b) <= (a % b)) {						\\ (expr) <= (expr)
		read y;
	}

	\\ cond_expr = !(cond_expr)
	while (!(x == 0)) {
		read y;
	}

	\\ cond_expr = (cond_expr) && (cond_expr)
	while ((x == 0) && (y == 0)) {
		read y;
	}

	\\ cond_expr = (cond_expr) || (cond_expr)
	while ((x == 0) || (y == 0)) {
		read y;
	}

	\\ cond_expr = !(!(cond_expr))
	while (!(!(x == 0))) {
		read y;
	}

	\\ cond_expr = ((cond_expr) && (cond_expr)) || (cond_expr)
	while (((x == 0) && (y == 0)) || (z == 0)) {
		read y;
	}
}